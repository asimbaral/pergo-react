[{"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\index.js":"1","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\App.js":"2","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\reportWebVitals.js":"3","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\TodoList.js":"4","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\PostList.js":"5","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\Form.js":"6","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\Post.js":"7","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\Todo.js":"8","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\Hello.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":2326,"mtime":1621061663747,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":427,"mtime":1607574431452,"results":"14","hashOfConfig":"11"},{"size":397,"mtime":1621923865347,"results":"15","hashOfConfig":"11"},{"size":1764,"mtime":1620958179178,"results":"16","hashOfConfig":"11"},{"size":4437,"mtime":1621924694476,"results":"17","hashOfConfig":"11"},{"size":980,"mtime":1607472902988,"results":"18","hashOfConfig":"11"},{"size":175,"mtime":1621058834387,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1esyysg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\index.js",[],["40","41"],"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\App.js",["42"],"import React, { useState, useEffect } from \"react\";\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\nimport './App.css';\n\n//Importing COmponents\nimport Form from \"./components/Form\"\nimport TodoList from \"./components/TodoList\"\nimport PostList from \"./components/PostList\"\nimport Hello from \"./components/Hello\"\nfunction App() {\n  \n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const apiURL = \"http://localhost:8080/api/posts/?page=1&limit=10\";\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n    fetchPosts();\n  }, [todos, status]);\n\n  // Functions\n  const fetchPosts = () => {\n    fetch(apiURL)\n        .then(res => res.json())\n        .then(res => {\n          //res.key = res[0]._id;\n          //console.log(res);\n          setPosts(res);\n        });\n  }\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <Router>\n     \n      <Route path=\"/\" exact>\n         <div className=\"App\">\n        <header>\n          <h1>PerGO</h1>\n        </header>\n          <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus}/>\n          <TodoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos} />\n          <PostList posts={posts}/>\n      </div> \n      </Route>\n\n      <Route path=\"/hello\" exact component={Hello} />\n      <Route path=\"/postid/:id\" exact component={PostList} />\n\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\reportWebVitals.js",[],"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\TodoList.js",[],"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\PostList.js",["43","44"],"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\Form.js",[],"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\Post.js",["45"],"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\Todo.js",[],"C:\\Programming Files\\pergo-react\\spotify-clone-app\\src\\components\\Hello.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":27,"column":6,"nodeType":"52","endLine":27,"endColumn":21,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":9,"nodeType":"56","messageId":"57","endLine":2,"endColumn":14},{"ruleId":"54","severity":1,"message":"58","line":2,"column":33,"nodeType":"56","messageId":"57","endLine":2,"endColumn":39},{"ruleId":"54","severity":1,"message":"59","line":11,"column":24,"nodeType":"56","messageId":"57","endLine":11,"endColumn":37},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["62"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'setShareCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"65","text":"66"},[794,809],"[todos, status, filterHandler, saveLocalTodos]"]